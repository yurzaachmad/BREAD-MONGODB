<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-9ndCyUaIbzAi2FUVXJi0CjmCapSmO7SnpJef0486qhLnuZ2cdeRhO02iuK6FUUVM"
      crossorigin="anonymous"
    />
    <script
      src="https://kit.fontawesome.com/6ea2cb925f.js"
      crossorigin="anonymous"
    ></script>
    <title>Document</title>
  </head>
  <body>
    <div class="card">
      <div class="card-header text-center">
        <h1>BREAD</h1>
      </div>
      <h2>ADD</h2>
      <div class="card-body">
        <form id="form" style="display: none">
          <fieldset>
            <div class="mb-3">
              <label for="number1" class="form-label">Number</label>
              <input
                type="number"
                id="number1"
                class="form-control"
                placeholder="Number"
                name="number"
                value=""
              />
            </div>
            <div class="mb-3">
              <label for="string1" class="form-label"> String </label>
              <input
                type="text"
                id="string1"
                class="form-control"
                placeholder="String"
                name="string"
                value=""
              />
            </div>
            <div class="mb-3">
              <label for="integer1" class="form-label">integer</label>
              <input
                type="number"
                id="integer1"
                class="form-control"
                placeholder="integer"
                name="integer"
                value=""
              />
            </div>
            <div class="mb-3">
              <label for="float1" class="form-label">float</label>
              <input
                type="number"
                step="0.01"
                id="float1"
                class="form-control"
                placeholder="float"
                name="float"
                value=""
              />
            </div>
            <div class="mb-3">
              <label for="date1" class="form-label">date</label>
              <input
                type="date"
                id="date1"
                class="form-control"
                placeholder="date"
                name="date"
                value=""
              />
            </div>
            <div class="mb-3">
              <label for="boolean1" class="form-label">boolean</label>
              <select class="form-select" id="boolean1" name="boolean">
                <option disabled>Choose the boolean...</option>
                <option value="true">True</option>
                <option value="false">False</option>
              </select>
            </div>

            <button type="submit" class="btn btn-primary">Tambah</button>
          </fieldset>
        </form>
      </div>
      <h2>EDIT</h2>
      <div class="card-body">
        <form id="form2" style="display: none">
          <fieldset>
            <div class="mb-3">
              <label for="number2" class="form-label">Number</label>
              <input
                type="number"
                id="number2"
                class="form-control"
                placeholder="Number"
                name="number"
                value=""
              />
            </div>
            <div class="mb-3">
              <label for="string2" class="form-label">String</label>
              <input
                type="text"
                id="string2"
                class="form-control"
                placeholder="String"
                name="string"
                value=""
              />
            </div>
            <div class="mb-3">
              <label for="integer2" class="form-label">integer</label>
              <input
                type="number"
                id="integer2"
                class="form-control"
                placeholder="integer"
                name="integer"
                value=""
              />
            </div>
            <div class="mb-3">
              <label for="float2" class="form-label">float</label>
              <input
                type="number"
                step="0.01"
                id="float2"
                class="form-control"
                placeholder="float"
                name="float"
                value=""
              />
            </div>
            <div class="mb-3">
              <label for="date2" class="form-label">date</label>
              <input
                type="date"
                id="date2"
                class="form-control"
                placeholder="date"
                name="date"
                value=""
              />
            </div>
            <div class="mb-3">
              <label for="boolean2" class="form-label">boolean</label>
              <select class="form-select" id="boolean2" name="boolean">
                <option disabled>Choose the boolean...</option>
                <option value="true">True</option>
                <option value="false">False</option>
              </select>
            </div>

            <button type="submit" class="btn btn-primary">Edit</button>
          </fieldset>
        </form>
      </div>
      <div class="card-body">
        <!-- untuk form search -->
        <form id="filter-form">
          <input type="hidden" name="page" value="1" />
          <div class="row mb-3">
            <label for="inputId" class="col-sm-4 col-form-label">
              <input type="checkbox" name="checkId" id="checkId" />
              Id
            </label>
            <div class="col-sm-8">
              <input
                type="number"
                class="form-control"
                id="idFilter"
                name="number"
              />
            </div>
          </div>
          <div class="row mb-3">
            <label for="inputStr" class="col-sm-4 col-form-label">
              <input type="checkbox" name="checkStr" id="checkStr" />
              String
            </label>
            <div class="col-sm-8">
              <input
                type="text"
                class="form-control"
                id="strFilter"
                name="string"
              />
            </div>
          </div>
          <div class="row mb-3">
            <label for="inputInt" class="col-sm-4 col-form-label">
              <input type="checkbox" name="checkInt" id="checkInt" />
              Integer
            </label>
            <div class="col-sm-8">
              <input
                type="text"
                class="form-control"
                id="intFilter"
                name="integer"
              />
            </div>
          </div>
          <div class="row mb-3">
            <label for="inputFloat" class="col-sm-4 col-form-label">
              <input type="checkbox" name="checkFloat" id="checkFloat" />
              Float
            </label>
            <div class="col-sm-8">
              <input
                type="text"
                class="form-control"
                id="floatFilter"
                name="float"
              />
            </div>
          </div>
          <div class="row mb-3">
            <label for="inputDate" class="col-sm-4 col-form-label">
              <input type="checkbox" name="checkDate" id="checkDate" />
              Date
            </label>
            <div class="col-sm-4">
              <input
                type="date"
                class="form-control"
                id="startDateFilter"
                name="startDate"
              />
              to
              <input
                type="date"
                class="form-control"
                id="endDateFilter"
                name="endDate"
              />
            </div>
          </div>
          <div class="row mb-3">
            <label for="inputBol" class="col-sm-4 col-form-label">
              <input type="checkbox" name="checkBol" id="checkBol" />
              Boolean
            </label>
            <div class="col-sm-8">
              <select name="boolean" id="booleanFilter" class="form-select">
                <option>Choose the boolean</option>
                <option value="true">True</option>
                <option value="false">False</option>
              </select>
            </div>
          </div>
          <button type="submit" class="btn btn-primary" id="searchButton">
            Search
          </button>
          <a href="/users" class="btn btn-secondary">Back</a>
        </form>
      </div>
      <table class="table table-striped">
        <thead>
          <tr>
            <td>
              number
              <i
                class="fa-solid fa-sort fa-sort-up"
                onclick="sortData('number', this)"
                data-field="number"
              ></i>
            </td>
            <td>
              string
              <i
                class="fa-solid fa-sort fa-sort-up"
                onclick="sortData('string', this)"
                data-field="string"
              ></i>
            </td>
            <td>
              integer
              <i
                class="fa-solid fa-sort fa-sort-up"
                onclick="sortData('integer', this)"
                data-field="integer"
              ></i>
            </td>
            <td>
              float
              <i
                class="fa-solid fa-sort fa-sort-up"
                onclick="sortData('float', this)"
                data-field="float"
              ></i>
            </td>
            <td>
              date
              <i
                class="fa-solid fa-sort fa-sort-up"
                onclick="sortData('date', this)"
                data-field="date"
              ></i>
            </td>
            <td>
              boolean
              <i
                class="fa-solid fa-sort fa-sort-up"
                onclick="sortData('boolean', this)"
                data-field="boolean"
              ></i>
            </td>
          </tr>
        </thead>
        <tbody id="body-bread"></tbody>
      </table>
      <nav aria-label="Page navigation example">
        <ul class="pagination" id="pagination1"></ul>
      </nav>
      <button class="btn btn-primary" id="addButton">Add</button>
    </div>
    <script>
      let selectedId = null;

      let sortField = null;
      let sortOrder = 1;

      function sortData(field, element) {
        if (sortField === field) {
          sortOrder *= -1;
        } else {
          sortField = field;
          sortOrder = 1;
        }

        // Menghapus kelas ikon sebelumnya
        const icons = document.querySelectorAll(".fa-sort");
        icons.forEach((icon) => {
          icon.classList.remove("fa-sort-up", "fa-sort-down");
          icon.classList.add("fa-sort");
        });

        // Mengatur kelas ikon berdasarkan arah pengurutan saat ini
        if (sortOrder === 1) {
          element.classList.remove("fa-sort-down");
          element.classList.remove("fa-sort");
          element.classList.add("fa-sort-up");
        } else {
          element.classList.remove("fa-sort-up");
          element.classList.remove("fa-sort");
          element.classList.add("fa-sort-down");
        }

        loadData();
      }

      function loadData(page) {
        const filterForm = document.getElementById("filter-form");
        const formData = new FormData(filterForm);
        const searchParams = new URLSearchParams(formData);

        let url = "http://localhost:3000/";
        if (page > 1) {
          searchParams.set("page", page);
        }

        if (sortField) {
          searchParams.set("sortField", sortField);
          searchParams.set("sortOrder", sortOrder === 1 ? "asc" : "desc");
        }

        url += "?" + searchParams.toString();

        const randomParam = Math.random().toString(36).substring(7);
        url += `&random=${randomParam}`;

        fetch(url)
          .then((response) => response.json())
          .then((data) => {
            let html = "";
            data.data.forEach((datas) => {
              html += `
          <tr>
            <td>${datas.number}</td>
            <td>${datas.string}</td>
            <td>${datas.integer}</td>
            <td>${datas.float}</td>
            <td>${datas.date}</td>
            <td>${datas.boolean}</td>
            <td>
              <button class="btn btn-danger" onclick="deleteData('${datas._id}')">Hapus</button>
              <button class="btn btn-success" onclick="editData('${datas._id}')">Edit</button>
            </td>
          </tr>
        `;
            });
            console.log(data);
            document.getElementById("body-bread").innerHTML = html;

            const paginationContainer = document.getElementById("pagination1");
            if (!paginationContainer) {
              paginationContainer = document.createElement("ul");
              paginationContainer.id = "pagination1";
              paginationContainer.classList.add("pagination");
            }
            paginationContainer.innerHTML = "";

            // Tombol Previous
            const prevLi = document.createElement("li");
            prevLi.classList.add("page-item");

            const prevLink = document.createElement("a");
            prevLink.classList.add("page-link");
            prevLink.href = `javascript:void(0)`;
            prevLink.innerText = "Previous";

            prevLink.addEventListener("click", () => {
              if (page > 1) {
                loadData(page - 1);
              }
            });

            prevLi.appendChild(prevLink);
            paginationContainer.appendChild(prevLi);

            for (let i = 0; i < data.pages; i++) {
              const li = document.createElement("li");
              li.classList.add("page-item");

              const link = document.createElement("a");
              link.classList.add("page-link");
              link.href = `javascript:void(0)`;
              link.innerText = i + 1;

              if (i + 1 === page) {
                link.classList.add("active");
              }

              link.addEventListener("click", () => {
                loadData(i + 1);
              });

              li.appendChild(link);
              paginationContainer.appendChild(li);
            }

            // Tombol Next
            const nextLi = document.createElement("li");
            nextLi.classList.add("page-item");

            const nextLink = document.createElement("a");
            nextLink.classList.add("page-link");
            nextLink.href = `javascript:void(0)`;
            nextLink.innerText = "Next";

            nextLink.addEventListener("click", () => {
              if (page < data.pages) {
                loadData(page + 1);
              }
            });

            nextLi.appendChild(nextLink);
            paginationContainer.appendChild(nextLi);
          })
          .catch((err) => {
            console.log(err);
            alert("gagal mengambil data" + err);
          });
      }

      function addData() {
        const string = document.getElementById("string1").value;
        const number = document.getElementById("number1").value;
        const integer = document.getElementById("integer1").value;
        const float = document.getElementById("float1").value;
        const date = document.getElementById("date1").value;
        const boolean = document.getElementById("boolean1").value;

        fetch("http://localhost:3000/", {
          method: "POST", // or 'PUT'
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            string,
            number,
            integer,
            float,
            date,
            boolean,
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            loadData();
            form.style.display = "none";
            const string = (document.getElementById("string1").value = "");
            const number = (document.getElementById("number1").value = "");
            const integer = (document.getElementById("integer1").value = "");
            const float = (document.getElementById("float1").value = "");
            const date = (document.getElementById("date1").value = "");
            const boolean = (document.getElementById("boolean1").value = "");
          });
      }

      async function editDatas(id) {
        try {
          const number = document.getElementById("number2").value;
          const string = document.getElementById("string2").value;
          const integer = document.getElementById("integer2").value;
          const float = document.getElementById("float2").value;
          const date = document.getElementById("date2").value;
          const boolean = document.getElementById("boolean2").value;
          const data = {
            number: number,
            string: string,
            integer: integer,
            float: float,
            date: date,
            boolean: boolean,
          };
          if (!number || !string || !integer || !float || !date || !boolean) {
            alert("Please, Insert the data");
            return;
          }
          console.log(id);
          const response = await fetch(`http://localhost:3000/${id}`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          });
          if (response.ok) {
            const result = await response.json();
            console.log("Success: ", result);
            // Clear the input fields
            form2.style.display = "none";
            document.getElementById("number2").value = "";
            document.getElementById("string2").value = "";
            document.getElementById("integer2").value = "";
            document.getElementById("float2").value = "";
            document.getElementById("date2").value = "";
            document.getElementById("boolean2").value = "";
            loadData();
          }
        } catch (error) {
          console.log(error);
        }
      }
      let datas;
      function editData(id) {
        selectedId = id;
        fetch(`http://localhost:3000/edit/${id}`)
          .then((response) => response.json())
          .then((data) => {
            datas = data;
            document.getElementById("number2").value = data.number;
            document.getElementById("string2").value = data.string;
            document.getElementById("integer2").value = data.integer;
            document.getElementById("float2").value = data.float;
            document.getElementById("date2").value = data.date;
            document.getElementById("boolean2").value = data.boolean;

            form2.style.display = "block";
          })
          .catch((error) => {
            console.log(error);
          });
      }

      function deleteData(id) {
        fetch(`http://localhost:3000/${id}`, {
          method: "DELETE", // or 'PUT'
          headers: {
            "Content-Type": "application/json",
          },
        })
          .then((response) => response.json())
          .then((data) => {
            loadData();
          });
      }

      const addButton = document.getElementById("addButton");
      const form = document.getElementById("form");

      addButton.addEventListener("click", function () {
        if (form.style.display === "none") {
          form.style.display = "block";
        } else {
          form.style.display = "none";
        }
      });

      const searchButton = document.getElementById("searchButton");

      searchButton.addEventListener("click", function (event) {
        event.preventDefault();
        loadData(1);
      });

      document
        .getElementById("form")
        .addEventListener("submit", function (event) {
          event.preventDefault();
          addData();
          if (selectedId) {
            editData(selectedId);
          }
        });
      let id;
      document
        .getElementById("form2")
        .addEventListener("submit", function (event) {
          event.preventDefault();
          id = `${datas._id}`;
          editDatas(id);
        });

      loadData(1);
    </script>
  </body>
</html>
